{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Condenações por improbidade no Brasil\"\nauthor: \"Julio Trecenti\"\ndate: 2017-03-10T09:23:47-02:00\ntags: ['ABJ', 'INAC']\nbanner: \"img/banners/banner-10.png\"\ndraft: true\n---\n\n```{r message=FALSE, echo=FALSE}\nknitr::opts_chunk$set(echo = FALSE, eval=FALSE)\n# library(tidyverse)\n# library(stringr)\n# library(lubridate)\n# library(cnc)\n```\n\nA corrupção é um dos temas mais importantes para os brasileiros.\n\nO Cadastro Nacional de Condenações por Improbidade Administrativa\n\nhttp://www.cnj.jus.br/busca-atos-adm?documento=2507\n\n## Histórico\n\nO Cadastro Nacional de Condenados por ato de Improbidade Administrativo e por ato que implique Inelegibilidade (CNCIAI) foi criado em 20/11/2007 pela Resolução 44 do CNJ.\n\n\n> CONSIDERANDO garantir a Constituição Federal o acesso do cidadão às informações detidas pelo Estado;\n> \n> CONSIDERANDO que a sentença definitiva proferida em ações de improbidade administrativa pode constituir informação importante para as decisões dos gestores públicos;\n> \n> CONSIDERANDO reger-se a Administração Pública pelos princípios da legalidade, moralidade e eficiência e ser a publicidade de seus atos obrigatória;\n> \n> CONSIDERANDO que as informações do Poder Judiciário sobre as ações de improbidade administrativa são raramente reunidas e usualmente tratadas de forma compartimentada no âmbito de cada unidade da federação - sendo, portanto, necessária integração e compartilhamento;\n> \n\nEm 08/03/2013, o CNCIAI passou a contemplar os atos que ocasionem a inelegibilidade do réu, nos termos da Lei Complementar nº 64, de 18 de maio de 1990.\n\n## Dados\n\nConsideramos em nossa base\n\n```{r, eval=FALSE}\n# Limpeza final da base! ------------------------------------------------------\n\ncnc_vis <- tidy_cnc %>% \n  filter(dt_cadastro < '2016-07-01', # escopo\n         # só transito em julgado\n         tipo_pena == 'Trânsito em julgado', \n         # sem assunto penal\n         !assunto_penal_any,\n         # julgou depois de distribuir.\n         dt_pena > dt_propositura,\n         # ficou com n quase zero aqui.\n         instancia == '1 grau') %>% \n  # se valores  são NA ou <= 0, teve_* correspondente é FALSE\n  mutate_at(vars(starts_with('vl_')), \n            funs(if_else(. <= 0 | . > 5e7, NA_real_, .))) %>% \n  mutate(teve_multa = !is.na(vl_multa),\n         teve_ressarcimento = !is.na(vl_ressarcimento),\n         teve_perda_bens = !is.na(vl_perda_bens)) %>% \n  # se durações são NA ou <= 0, teve_* correspondente é FALSE\n  mutate_at(vars(starts_with('duracao_')), \n            funs(if_else(. <= 0, NA_real_, .))) %>% \n  mutate(teve_suspensao = !is.na(duracao_suspensao),\n         teve_proibicao = !is.na(duracao_proibicao)) %>% \n  # tempo de condenacao\n  select(-teve_pena) %>% \n  # criando um teve_all e modificando os teve_* para character\n  mutate(tempo_condenacao = as.numeric(dt_pena - dt_propositura)) %>% {\n    d <- .\n    nms <- d %>% select(starts_with('teve_')) %>% names()\n    nms_clean <- nms %>% str_replace_all('^teve_', '')\n    purrr::walk2(nms, nms_clean, ~{\n      d[[.x]] <<- d[[.x]] %>% \n        if_else(.y, 'NA') %>% \n        type.convert(as.is = TRUE)\n    })\n    d\n  } %>% \n  unite(teve_all, starts_with('teve_'), sep = ',', remove = FALSE) %>% \n  mutate(teve_all = teve_all %>% \n           str_replace_all(',NA|^NA,(NA,)*|NA$', '')) %>%\n  select(id_condenacao, id_processo, id_pessoa,\n         # condenacoes\n         dt_condenacao = dt_pena, tempo_condenacao,\n         starts_with('teve_'),\n         starts_with('vl_'),\n         starts_with('de_'), -de_pena,\n         -starts_with('ate_'),\n         starts_with('duracao_'), -duracao_pena, -ends_with('_regex'),\n         starts_with('assunto_cod'), -assunto_cod_5,\n         starts_with('assunto_nm'), -assunto_nm_5,\n         # processos\n         n_processo, dt_cadastro, dt_propositura,\n         esfera_processo, tribunal, instancia,\n         comarca_secao, vara_camara, uf_processo,\n         # pessoas\n         tipo_pessoa, nm_pessoa, sexo, \n         publico, esfera, orgao, cargo\n         ) %>% \n  unite(assunto_cod_all, starts_with('assunto_cod'), sep = ',') %>% \n  unite(assunto_nm_all, starts_with('assunto_nm'), sep = ',') %>% \n  mutate_at(vars(starts_with(\"assunto_\")),\n            funs(str_replace_all(., ',NA|^NA,', ''))) %>% \n  arrange(floor_date(dt_cadastro, 'day'), as.numeric(id_processo))\n\n## todos os casos do tipo órgao colegiado \n## são do ano de 2013 para frente.\n# tidy_cnc %>% \n#   filter(tipo_pena == 'Órgão colegiado') %>% \n#   count(year(dt_cadastro))\n\n\n# cnc_vis %>%\n#   filter(order(as.numeric(id_processo)) \n#          != seq_along(id_processo)) %>%\n#   View\n\n# cnc_vis %>%\n#   separate(assunto_cod_all, paste0('assunto_cod_', 1:4), sep = ',', \n#            convert = TRUE) %>% \n#   separate(assunto_nm_all, paste0('assunto_nm_', 1:4), sep = ',', \n#            convert = TRUE)\n```\n\n```{r sumarios, eval=FALSE}\nn_condenacoes <- n_distinct(cnc_vis$id_condenacao)\nn_processos <- n_distinct(cnc_vis$id_processo)\nn_pessoas <- n_distinct(cnc_vis$id_pessoa)\n\ntab_n <- tibble::tibble(\n  Condenações = n_condenacoes,\n  Processos = n_processos,\n  Pessoas = n_pessoas,\n  `Valor multas` = sum(cnc_vis$vl_multa, na.rm = TRUE) %>% \n    scales::dollar(),\n  `Valor ressarcimentos` = sum(cnc_vis$vl_ressarcimento, na.rm = TRUE) %>% \n    scales::dollar()\n)\n\ntab_teves1 <- cnc_vis %>% \n  gather(tipo_teve, teve, starts_with('teve'), -teve_all) %>% \n  group_by(tipo_teve) %>% \n  summarise(prop = sum(!is.na(teve)) / n()) %>% \n  arrange(desc(prop)) %>% \n  mutate(prop = scales::percent(prop))\n\ntab_teves2 <- cnc_vis %>% \n  count(teve_all, sort = TRUE) %>% \n  mutate(prop = n/sum(n), prop = scales::percent(prop))\n```\n\n```{r, eval=FALSE}\n## META\n## Cortes\n## -\n```\n\n\n<!-- ----------------------------------------------------------------------- -->\n\n## Caracterização\n\n```{r, eval=FALSE}\nknitr::kable(tab_n)\n```\n\n- coluna com mapas\n\n## Punições\n\n- mapa assuntos x punicoes\n\n## Danos\n\n## Tempos\n\n\n## Componentes\n\n## Evolução\n\n",
    "created" : 1495827039360.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1945510624",
    "id" : "85A5854",
    "lastKnownWriteTime" : 1489698738,
    "last_content_update" : 1489698738,
    "path" : "~/abj/home/content/blog/2017-03-10-improbidade1.Rmd",
    "project_path" : "content/blog/2017-03-10-improbidade1.Rmd",
    "properties" : {
        "chunk_output_type" : "console"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}